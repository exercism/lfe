#!/usr/bin/env bash

set -euo pipefail

original_dir=$PWD

run_test() {
  (
    exercise_dir="${1%/}"
    cd "$exercise_dir" || return

    slug="${1%/}"
    slug="${slug##*/}"
    slug_original="${slug}"
    # special case where the slug is different inside the folder
    if [[ "$slug" = "binary" ]]; then
        slug="binary-string"
    fi

    example_file=".meta/example.lfe"
    stub_file="src/$slug.lfe"
    stub_backup="src/$slug.bak"

    trap 'mv "$stub_backup" "$stub_file"' EXIT

    cp "$stub_file" "$stub_backup"
    cp "$example_file" "$stub_file"
    if ! test_output=$(make test 2>&1); then
        echo "$test_output"
        echo "❌ $slug_original"
        exit 1
    else
        echo "✅ $slug_original"
    fi
  )
}

if [[ -d "./exercises/concept" ]]; then
    echo "Checking concept exercises..."
    for concept_exercise_dir in ./exercises/concept/*; do
        if [[ -d $concept_exercise_dir ]]; then
            slug="${practice_exercise_dir##*/}"
            run_test "$concept_exercise_dir"
        fi
    done
else
    echo "No concept exercises found. Skipping..."
fi


echo "Checking practice exercises..."

mapfile -t practice_exercises < <(jq -r '
  .exercises.practice |
  map(
      select(.status != "deprecated").slug
  ) |
  sort
  | .[] ' config.json
)

for practice_exercise in "${practice_exercises[@]}"; do
    if [[ -d "./exercises/practice/$practice_exercise" ]]; then
        run_test "./exercises/practice/$practice_exercise"
    else
        echo "Directory not found for $practice_exercise"
        exit 1
    fi
done
